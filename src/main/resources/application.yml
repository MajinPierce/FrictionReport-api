server:
  port: 8080

openweather:
  domain: https://api.openweathermap.org/data/3.0/onecall
  apiKey: ${OPEN_WEATHER_API_KEY}
  units:  imperial

friction-report:
  url:
    prod: https://api.friction.report
    dev: http://localhost:8080

logging:
  level:
    root: WARN
    report.friction: info
    org.springframework.web.servlet:
      DispatcherServlet: trace

springdoc:
  swagger-ui:
    default-models-expand-depth: -1
  show-actuator: true
  paths-to-exclude: /climbingAreaEntities, /climbingAreaEntities/*, /climbingAreaEntities/search/*, /profile, /profile/*

management:
  endpoint:
    health:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health

spring:
  mvc:
    log-request-details: true
  datasource:
    url: jdbc:h2:mem:areadb;DATABASE_TO_UPPER=false
    driverClassName: org.h2.Driver
    username: ${H2_USERNAME}
    password: ${H2_PASSWORD}
  h2:
    console:
      enabled: false
      settings:
        web-allow-others: false
  jpa:
    properties:
      hibernate:
        globally_quoted_identifiers: true
    defer-datasource-initialization: true
    open-in-view: false
  sql:
    init:
      platform: h2

---
#LOCAL
spring:
  config:
    activate:
      on-profile: local
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true

logging:
  level:
    root: debug
    org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor: trace

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'

---
#DEV
spring:
  config:
    activate:
      on-profile: dev
    import: aws-secretsmanager:friction-report-api-secrets
  cloud:
    aws:
      cloudwatch:
        region: us-east-1
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'

logging:
  level:
    org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor: trace
  pattern:
    console: "[%boldMagenta(FR-API)] [%boldGreen(DEV)] %d{yyyy-MM-dd HH:mm:ss} %highlight([%5p]) --- [%cyan(%15.15t)] %-40.40logger{1.} %boldYellow(::) %m%n%wEx"
---
#PROD
spring:
  config:
    activate:
      on-profile: prod
    import: aws-secretsmanager:friction-report-api-secrets
  cloud:
    aws:
      cloudwatch:
        region: us-east-1

logging:
  pattern:
    console: "[FR-API] [PROD] %d{yyyy-MM-dd HH:mm:ss} [%5p] --- [%15.15t] %-40.40logger{1.} :: %m%n%wEx"